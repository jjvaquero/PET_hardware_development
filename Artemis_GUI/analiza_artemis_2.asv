%analizar los primeros datos obtenidos con el artemis
%cutre script para probar el uso del quick en Matlab

%configuracion de canales, detector LYSO
% 1 = YA 2 = YB
% 3 = XA 4 = XB
%dia 21/5/12

clear;tic
%me creo un obejto del tipo FPGA
quick = Quick_USB('qusb1');
%lo configuro
QUSB_init(quick);
%configuro la FPGA
QUSB_FpgaInit(quick);
%programo la FPGA
QUSB_FpgaProgram(quick,'daq_multi.rbf');
lecturas = 1000;
DataGuard = zeros(lecturas,512);

%Ahora viene el bucle de lectura
for  i = 1:lecturas
    [data,nRead] = QUSB_ReadFpgaData(quick,1024);
    %los datos son leidos a un array de caracteres
    %por ello realizo ahora la conversion necesaria
    dataConv = typecast(data,'uint16');
    DataGuard(i,:)= dataConv;
    pause(0.5);
end
toc
%luego puedo mirar a ver si hay alguna forma de pasar los datos de un tipo
%a otro..seguramente la hay


%load Artemis1.mat

%la variable que me interesa es DataGuard;
%para ello la convierto en una matriz fila
data = zeros(lecturas*512,1);
for i = 1 : lecturas
    data(((i-1)*512+1):(i*512)) = DataGuard(i,:);
end

%pongo ahora a 0 los valores consecutivos e iguales
%un problema que tiene la FIFO de la FPGA
%cuando no le quedan datos, devuelve muchas veces el último almacenado
for i = 1: lecturas*512 - 1 %10239
    %if (mean([data(i-1),data(i),data(i+1)])-data(i) == 0) 
    %no deberian haber nunca dos valores seguids por lo que...
    if (data(i) - data(i+1) == 0)
        data(i) = 0;
    end
end

%ahora analizo los datos y los meto en el canal correspondiente
ind1 = 1; ind2 = 1; ind3 = 1; ind4 = 1; 
canal1 = zeros(1,lecturas*100); histo1 = zeros(1,4096);
canal2 = zeros(1,lecturas*100); histo2 = zeros(1,4096);
canal3 = zeros(1,lecturas*100); histo3 = zeros(1,4096);
canal4 = zeros(1,lecturas*100); histo4 = zeros(1,4096);


for i = 1 : lecturas*512
    if (data(i) ~=0 ) %me aseguro de que no es un valor repetido
        if( data(i) >= 32768) %se trata del cuarto canal
            canal4(ind4) = data(i)-32768;
            if( canal4(ind4)> 0 && canal4(ind4) < 4096)
                histo4(canal4(ind4)+1) = histo4(canal4(ind4)+ 1) + 1; %el mas uno del hist...es porque matlab empieza en 1 y no en 0
            end
            ind4 = ind4+1;
        elseif (data(i) >= 16384)
            canal3(ind3) = data(i)-16384;
            if( canal3(ind3)> 0 && canal3(ind3) < 4096)
                histo3(canal3(ind3)+1) = histo3(canal3(ind3)+ 1) + 1; %el mas uno del hist...es porque matlab empieza en 1 y no en 0
            end
            ind3 = ind3+1;
        elseif (data(i) >= 8192)
            canal2(ind2) = data(i)- 8192;
            if( canal2(ind2)> 0 && canal2(ind2) < 4096)
                histo2(canal2(ind2)+1) = histo2(canal2(ind2)+ 1) + 1; %el mas uno del hist...es porque matlab empieza en 1 y no en 0
            end
            ind2 = ind2+1;
        elseif (data(i) >= 4096)
            canal1(ind1) = data(i)- 4096;
            histo1(canal1(ind1)+1) = histo1(canal1(ind1)+ 1) + 1; %el mas uno del hist...es porque matlab empieza en 1 y no en 0
            ind1 = ind1+1;
        else
            data(i)
        end
    end
end

%ahora genero la imagen, para eso leo los datos de cada canal
%para eso asigno los valores
img = zeros (512,512);
n_error= 0;
menor = min([ind1,ind2,ind3,ind4]);
for i = 1: menor-1
    XA = canal3(i)/16; XB = canal4(i)/16;
    YA = canal1(i)/16; YB = canal2(i)/16;
    
    energia = (XA + XB +YA + YB) / 8; %hago un cutre escalado...
    
    X = round((XA-XB) + 256);
    Y = round((YA-YB) + 256);
    if (X>0 && X<513) && (Y>0 && Y<513)
        img(X,Y) = img(X,Y) + energia;
    else
        n_error = n_error+1;
        X;
        Y;
    end
end
%imshow(mat2gray(img));
%imagesc(img);

subplot(2,2,1); plot(histo1);
subplot(2,2,2); plot(histo2);
subplot(2,2,3); plot(histo3);
subplot(2,2,4); plot(histo4);

    

            
          


